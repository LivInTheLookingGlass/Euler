/*
Project Euler Problem 2

Again, see Python implementation for a proof

Problem:

Each new term in the Fibonacci sequence is generated by adding the previous two
terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.
*/

#ifndef EULER_P0002
#define EULER_P0002
#include <stdint.h>
#include <iostream>
#include "include/macros.hpp"

uint64_t EMSCRIPTEN_KEEPALIVE p0002() {
    uint64_t answer = 0,
    a = 1, b = 2, t;
    do {
        answer += b;
        // see python fibonacci file for proof this works
        t = b;
        b = a + b * 4;
        a = t;
    } while (b < 4000000);
    return answer;
}

#ifndef UNITY_END
int main(int argc, char const *argv[]) {
    std::cout << p0002() << std::endl;
    return 0;
}
#endif
#endif
