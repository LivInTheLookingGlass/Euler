/*
Project Euler Problem 2

Again, see Python implementation for a proof

Problem:

Each new term in the Fibonacci sequence is generated by adding the previous two
terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.
*/

#ifndef EULER_P0002
#define EULER_P0002
#include <stdio.h>

unsigned long long p0002() {
    unsigned long long answer = 0,
    a = 1, b = 2, t;
    while (b < 4000000) {
        // odd (1, 3, 13, 55, ...)
        // odd (1, 5, 21, 89, ...)
        // even (2, 8, 34, 144, ...)
        answer += b;
        for (unsigned char z = 0; z < 3; z++) {
            t = b;
            b = a + b;
            a = t;
        }
    }
    return answer;
}

#ifndef UNITY_END
int main(int argc, char const *argv[])  {
    unsigned long long answer = p0002();
    printf("%llu\n", answer);
    return 0;
}
#endif
#endif
