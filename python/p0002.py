"""
Project Euler Problem 2

I also decided that I like lazy functions on this one. Also seen: generator
comprehensions

Revision 1:

I split fib() up so that there is one version which limits and another which
does not.

Problem:

Each new term in the Fibonacci sequence is generated by adding the previous two
terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.

"""
from itertools import takewhile
from typing import Iterator


def fib() -> Iterator[int]:
    """This generator goes through the fibonacci sequence"""
    a, b = 0, 1
    while True:
        yield b
        a, b = b, a + b


def fib_lim(lim: int) -> Iterator[int]:
    """This generator goes through the fibonacci sequence up to lim"""
    yield from takewhile(lambda x: x < lim, fib())


def main():
    return sum(x for x in fib_lim(4_000_000) if x % 2 == 0)


if __name__ == '__main__':
    print(main())
