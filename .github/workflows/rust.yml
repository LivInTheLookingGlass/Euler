name: Rs

on:
  push:
    paths:
      - 'rust/**'
      - '!rust/README.rst'
      - '.github/workflows/rust.yml'
  schedule:
  - cron: "0 0 1 * *"

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_and_test:
    name: Rust
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        toolchain:
          - nightly  # currently = 1.83
          - beta     # currently = 1.82
          - stable   # currently = 1.81
        os:
          - ubuntu-latest
          - windows-latest
        include:
          - toolchain: stable
            os: macos-13
          - toolchain: stable
            os: macos-latest
          - toolchain: "1.80"
            os: ubuntu-latest
          - toolchain: "1.79"
            os: ubuntu-latest
          - toolchain: "1.78"
            os: ubuntu-latest
          - toolchain: "1.77"
            os: ubuntu-latest
          - toolchain: "1.76"
            os: ubuntu-latest
          - toolchain: "1.75"
            os: ubuntu-latest
          - toolchain: "1.74"
            os: ubuntu-latest
          - toolchain: "1.73"
            os: ubuntu-latest
          - toolchain: "1.72"
            os: ubuntu-latest
          - toolchain: "1.71"
            os: ubuntu-latest
          - toolchain: "1.70"
            os: ubuntu-latest
          - toolchain: "1.69"
            os: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          components: llvm-tools-preview

      - run: rustup default ${{ matrix.toolchain }}

      - run: cd rust && cargo test
        if: ${{ matrix.toolchain != 'stable' }}
        env:
          RUSTFLAGS: '-Copt-level=2'
          RUST_BACKTRACE: 1

      - name: Install cargo-llvm-cov
        if: ${{ matrix.toolchain == 'stable' }}
        uses: taiki-e/install-action@cargo-llvm-cov
      - if: ${{ matrix.toolchain == 'stable' }}
        run: cargo llvm-cov --all-features --exclude register_derive_impl --workspace --no-fail-fast --lcov --output-path lcov.info
        env:
          NODE_COVERALLS_DEBUG: true
      - name: rust-grcov
        if: ${{ matrix.toolchain == 'nightly' }}
        run: cargo install grcov && grcov rust --path-mapping rust/mapping.json -t cobertura -o .

      - name: Upload coverage reports to Codecov
        if: ${{ matrix.toolchain == 'nightly' }}
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: Rust
