name: Euler Regression Check

on: push

jobs:
  python:
    strategy:
      matrix:
        version: ["3.6", "3.7", "3.8", "3.9", "3.10", "3.11", "3.12"]
        os: [ubuntu-latest, windows-latest]
        exclude:
        - os: ubuntu-latest
          version: 3.6
        - os: macos-13
          version: 3.11
        - os: macos-13
          version: 3.12
        include:
        - os: ubuntu-20.04
          version: 3.6
        - os: macos-latest
          version: 3.11
        - os: macos-latest
          version: 3.12
        - os: ubuntu-latest
          version: graalpy-23.1
        - os: macos-latest
          version: 3.12
        - os: macos-13
          version: 3.12
        - os: ubuntu-latest
          version: graalpy-24.0
        - os: ubuntu-latest
          version: pypy3.8
        - os: ubuntu-latest
          version: pypy3.9
        - os: ubuntu-latest
          version: pypy3.10
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3

    - name: Use Python ${{ matrix.version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.version }}
        cache: 'pip'
        cache-dependency-path: |
          python/requirements.txt
          c/requirements.txt

    - name: Run tests
      run: make pytest LINT=false

  javascript:
    strategy:
      matrix:
        version: [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
        os: [ubuntu-latest, windows-latest, macos-latest]
        exclude:
        - os: macos-latest
          version: 8
        - os: macos-latest
          version: 9
        - os: macos-latest
          version: 10
        - os: macos-latest
          version: 11
        - os: macos-latest
          version: 12
        - os: macos-latest
          version: 13
        - os: macos-latest
          version: 14
        - os: macos-latest
          version: 15
        include:
        - os: macos-13
          version: 8
        - os: macos-13
          version: 9
        - os: macos-13
          version: 10
        - os: macos-13
          version: 11
        - os: macos-13
          version: 12
        - os: macos-13
          version: 13
        - os: macos-13
          version: 14
        - os: macos-13
          version: 15
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.version }}
        cache: 'npm'
        cache-dependency-path: 'javascript/package-lock.json'

    - name: Run tests
      run: make jstest

  c:
    strategy:
      matrix:
#         compiler: ["llvm", "gcc"]
#         # compiler targets (ideally): clang, gcc, MSVCC, pcc, tcc, icc, 
         os: [ubuntu-latest, windows-latest, macos-latest, macos-13]
#         include:
#           - os: windows-latest
#             compiler: msvc
#           - os: windows-latest
#             compiler: mingw
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3

    - name: Use Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
        cache-dependency-path: c/requirements.txt

#     - name: Setup Cpp ${{ matrix.compiler }}
#       uses: aminya/setup-cpp@v1
#       if: ${{ contains(matrix.compiler, fromJSON('["llvm", "gcc", "msvc"]')) }}
#       with:
#         compiler: ${{ matrix.compiler }}

#     - name: Set up MinGW
#       uses: egor-tensin/setup-mingw@v2
#       if: ${{ matrix.compiler == 'mingw' }}
#       with:
#         platform: x64

    - name: Run tests
      run: make ctest

  csharp:
    strategy:
      fail-fast: false
      matrix:
        net_version: [5, 6, 7, 8]
        os: [ubuntu-latest, windows-latest]
        include:
        - net_version: 8
          os: macos-latest
        - net_version: 8
          os: macos-13
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET ${{ matrix.net_version }}
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ matrix.net_version }}
        cache: true
        cache-dependency-path: 'csharp/packages.lock.json'

    - name: Dependencies
      run: make csdependencies

    - name: Run Tests
      run: make cstest
