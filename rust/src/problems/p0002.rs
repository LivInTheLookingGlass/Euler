/*
Project Euler Problem 2

This is a port of the optimized version found in python. For a proof of why this
works, see that implementation

Problem:

Each new term in the Fibonacci sequence is generated by adding the previous two
terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.
*/
use crate::include::fibonacci::fib_by_3;
use crate::include::utils::Answer;

pub fn p0002() -> Answer {
    return Answer::Int(fib_by_3::<u64>().take_while(|x| *x < 4000000).sum::<u64>().into());
}
